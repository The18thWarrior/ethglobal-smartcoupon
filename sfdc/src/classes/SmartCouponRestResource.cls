@RestResource(urlMapping='/SmartCoupon/*')
global without sharing class SmartCouponRestResource {
    // Top 100 male and female from US data in 2014
    public static List<String> firstNames = new List<String>{
        'Aaliyah',
        'Abigail',
        'Addison',
        'Alexa',
        'Alexandra',
        'Alexis',
        'Alice',
        'Allison',
        'Alyssa',
        'Amelia',
        'Anna',
        'Annabelle',
        'Aria',
        'Ariana',
        'Arianna',
        'Ashley',
        'Aubree',
        'Aubrey',
        'Audrey',
        'Autumn',
        'Ava',
        'Avery',
        'Bella',
        'Brianna',
        'Brooklyn',
        'Camila',
        'Caroline',
        'Charlotte',
        'Chloe',
        'Claire',
        'Eleanor',
        'Elizabeth',
        'Ella',
        'Ellie',
        'Emily',
        'Emma',
        'Eva',
        'Evelyn',
        'Faith',
        'Gabriella',
        'Genesis',
        'Gianna',
        'Grace',
        'Hadley',
        'Hailey',
        'Hannah',
        'Harper',
        'Isabella',
        'Isabelle',
        'Jasmine',
        'Julia',
        'Katherine',
        'Kaylee',
        'Kennedy',
        'Khloe',
        'Kylie',
        'Lauren',
        'Layla',
        'Leah',
        'Lillian',
        'Lily',
        'London',
        'Lucy',
        'Lydia',
        'Mackenzie',
        'Madeline',
        'Madelyn',
        'Madison',
        'Maya',
        'Melanie',
        'Mia',
        'Mila',
        'Naomi',
        'Natalie',
        'Nevaeh',
        'Nora',
        'Olivia',
        'Paisley',
        'Penelope',
        'Peyton',
        'Piper',
        'Riley',
        'Ruby',
        'Sadie',
        'Samantha',
        'Sarah',
        'Savannah',
        'Scarlett',
        'Serenity',
        'Skylar',
        'Sofia',
        'Sophia',
        'Sophie',
        'Stella',
        'Taylor',
        'Victoria',
        'Violet',
        'Vivian',
        'Zoe',
        'Zoey',
        'Aaron',
        'Adam',
        'Adrian',
        'Aiden',
        'Alexander',
        'Andrew',
        'Angel',
        'Anthony',
        'Asher',
        'Austin',
        'Ayden',
        'Benjamin',
        'Bentley',
        'Blake',
        'Brandon',
        'Brayden',
        'Brody',
        'Caleb',
        'Camden',
        'Cameron',
        'Carson',
        'Carter',
        'Charles',
        'Chase',
        'Christian',
        'Christopher',
        'Colton',
        'Connor',
        'Cooper',
        'Daniel',
        'David',
        'Dominic',
        'Dylan',
        'Easton',
        'Eli',
        'Elijah',
        'Ethan',
        'Evan',
        'Gabriel',
        'Gavin',
        'Grayson',
        'Henry',
        'Hudson',
        'Hunter',
        'Ian',
        'Isaac',
        'Isaiah',
        'Jace',
        'Jack',
        'Jackson',
        'Jacob',
        'James',
        'Jason',
        'Jaxon',
        'Jaxson',
        'Jayden',
        'Jeremiah',
        'John',
        'Jonathan',
        'Jordan',
        'Jose',
        'Joseph',
        'Joshua',
        'Josiah',
        'Juan',
        'Julian',
        'Justin',
        'Kayden',
        'Kevin',
        'Landon',
        'Leo',
        'Levi',
        'Liam',
        'Lincoln',
        'Logan',
        'Lucas',
        'Luis',
        'Luke',
        'Mason',
        'Matthew',
        'Michael',
        'Nathan',
        'Nathaniel',
        'Nicholas',
        'Noah',
        'Nolan',
        'Oliver',
        'Owen',
        'Parker',
        'Robert',
        'Ryan',
        'Ryder',
        'Samuel',
        'Sebastian',
        'Thomas',
        'Tristan',
        'Tyler',
        'William',
        'Wyatt',
        'Xavier',
        'Zachary'
    };

    // Top 200 last names from US data in 2014
    public static List<String> lastNames = new List<String>{
        'Adams',
        'Alexander',
        'Allen',
        'Alvarez',
        'Anderson',
        'Arnold',
        'Bailey',
        'Baker',
        'Barnes',
        'Bell',
        'Bennett',
        'Black',
        'Boyd',
        'Bradley',
        'Brooks',
        'Brown',
        'Bryant',
        'Burns',
        'Butler',
        'Campbell',
        'Carter',
        'Castillo',
        'Castro',
        'Chavez',
        'Clark',
        'Cole',
        'Coleman',
        'Collins',
        'Cook',
        'Cooper',
        'Cox',
        'Crawford',
        'Cruz',
        'Cunningham',
        'Daniels',
        'Davis',
        'Diaz',
        'Dixon',
        'Dunn',
        'Edwards',
        'Elliott',
        'Ellis',
        'Evans',
        'Ferguson',
        'Fernandez',
        'Fisher',
        'Flores',
        'Ford',
        'Foster',
        'Fox',
        'Freeman',
        'Garcia',
        'Gardner',
        'Gibson',
        'Gomez',
        'Gonzales',
        'Gonzalez',
        'Gordon',
        'Graham',
        'Grant',
        'Gray',
        'Green',
        'Griffin',
        'Gutierrez',
        'Hall',
        'Hamilton',
        'Hansen',
        'Harris',
        'Harrison',
        'Hart',
        'Hawkins',
        'Hayes',
        'Henderson',
        'Henry',
        'Hernandez',
        'Herrera',
        'Hicks',
        'Hill',
        'Hoffman',
        'Holmes',
        'Howard',
        'Hughes',
        'Hunt',
        'Hunter',
        'Jackson',
        'James',
        'Jenkins',
        'Jimenez',
        'Johnson',
        'Jones',
        'Jordan',
        'Kelley',
        'Kelly',
        'Kennedy',
        'Kim',
        'King',
        'Knight',
        'Lee',
        'Lewis',
        'Long',
        'Lopez',
        'Marshall',
        'Martin',
        'Martinez',
        'Mason',
        'Mcdonald',
        'Medina',
        'Mendoza',
        'Meyer',
        'Miller',
        'Mills',
        'Mitchell',
        'Moore',
        'Morales',
        'Moreno',
        'Morgan',
        'Morris',
        'Murphy',
        'Murray',
        'Myers',
        'Nelson',
        'Nguyen',
        'Nichols',
        'Olson',
        'Ortiz',
        'Owens',
        'Palmer',
        'Parker',
        'Patel',
        'Patterson',
        'Payne',
        'Perez',
        'Perry',
        'Peters',
        'Peterson',
        'Phillips',
        'Pierce',
        'Porter',
        'Powell',
        'Price',
        'Ramirez',
        'Ramos',
        'Reed',
        'Reyes',
        'Reynolds',
        'Rice',
        'Richardson',
        'Rivera',
        'Roberts',
        'Robertson',
        'Robinson',
        'Rodriguez',
        'Rogers',
        'Romero',
        'Rose',
        'Ross',
        'Ruiz',
        'Russell',
        'Ryan',
        'Sanchez',
        'Sanders',
        'Schmidt',
        'Scott',
        'Shaw',
        'Simmons',
        'Simpson',
        'Smith',
        'Snyder',
        'Spencer',
        'Stephens',
        'Stevens',
        'Stewart',
        'Stone',
        'Sullivan',
        'Taylor',
        'Thomas',
        'Thompson',
        'Torres',
        'Tran',
        'Tucker',
        'Turner',
        'Vasquez',
        'Wagner',
        'Walker',
        'Wallace',
        'Ward',
        'Warren',
        'Washington',
        'Watson',
        'Weaver',
        'Webb',
        'Wells',
        'West',
        'White',
        'Williams',
        'Wilson',
        'Wood',
        'Woods',
        'Wright',
        'Young'
    };

    @HttpPost
    global static void createWeb3Address() {
        try {
            RequestData web3Info = (RequestData) JSON.deserialize(RestContext.Request.requestBody.toString(), RequestData.class);
            List<Web3Address__c> web3Address = [
                SELECT Id, Contact__c, Lead__c
                FROM Web3Address__c
                WHERE Address__c = :web3Info.address
            ];
            System.debug(web3Address);
            System.debug(web3Info.address);
            if (!web3Address.isEmpty()) {
                System.debug('Not empty!');
                if (web3Address[0].Lead__c != null) {
                    Lead updatedLead = new Lead(
                        Id = web3Address[0].Lead__c,
                        Email = web3Info.email,
                        LinkedIn_URL__c = web3Info.linkedInURL,
                        Twitter__c = web3Info.twitter,
                        Discord__c = web3Info.discord
                    );
                    update updatedLead;
                } else {
                    Contact updatedContact = new Contact(
                        Id = web3Address[0].Contact__c,
                        Email = web3Info.email,
                        LinkedIn_URL__c = web3Info.linkedInURL,
                        Twitter__c = web3Info.twitter,
                        Discord__c = web3Info.discord
                    );
                    update updatedContact;
                }
            } else {
                System.debug('Empty!');
                Lead newLead = new Lead(
                    Email = web3Info.email,
                    LinkedIn_URL__c = web3Info.linkedInURL,
                    Twitter__c = web3Info.twitter,
                    Discord__c = web3Info.discord,
                    lastName = SmartCouponRestResource.lastNames[(Integer) (Math.random() * SmartCouponRestResource.lastNames.size())],
                    firstName = SmartCouponRestResource.firstNames[(Integer) (Math.random() * SmartCouponRestResource.firstNames.size())],
                    Company = 'Watto Shop'
                );
                insert newLead;
                Web3Address__c newWeb3Address = new Web3Address__c(Lead__c = newLead.Id, Address__c = web3Info.address);
                insert newWeb3Address;
                Web3Address__c newWeb3AddressReference = new Web3Address__c(Address__c = web3Info.address);
                Web3CampaignMember__c newCampaignMember = new Web3CampaignMember__c(
                    Lead__c = newLead.Id,
                    Web3_Address__r = newWeb3AddressReference,
                    Web3_Campaign__c = 'a00Do00000163cFIAQ'
                );
                insert newCampaignMember;
            }
            RestContext.response.statusCode = 200;
            RestContext.response.responseBody = Blob.valueOf('Success');
        } catch (Exception e) {
            RestContext.response.statusCode = 500;
            RestContext.response.responseBody = Blob.valueOf(e.getMessage());
        }
    }

    public class RequestData {
        public String address;
        public String email;
        public String linkedInURL;
        public String twitter;
        public String discord;
    }

    @HttpGet
    global static String getRewards() {
        RestRequest req = RestContext.request;
        RestResponse res = RestContext.response;
        String web3Address = req.requestURI.substring(req.requestURI.lastIndexOf('/') + 1);
        System.debug(web3Address);
        List<Web3CampaignResult__c> results = [
            SELECT Web3_Campaign_Reward__r.Contract_Address__c, Web3_Campaign_Reward__r.Type__c, Web3_Campaign_Reward__r.Image_Url__c
            FROM Web3CampaignResult__c
            WHERE Web3_Campaign_Member__r.Web3_Address__r.Address__c = :web3Address
        ];
        List<ResponseData> formattedResponse = new List<ResponseData>();
        for (Web3CampaignResult__c result : results) {
            System.debug(result.Web3_Campaign_Reward__r);
            ResponseData resultFormatted = new ResponseData(
                result.Web3_Campaign_Reward__r.Type__c,
                result.Web3_Campaign_Reward__r.Image_Url__c,
                result.Web3_Campaign_Reward__r.Contract_Address__c
            );
            formattedResponse.add(resultFormatted);
        }
        return JSON.serialize(formattedResponse);
    }

    global class ResponseData {
        public String type;
        public String imageUrl;
        public String contractAddress;

        public ResponseData(String newType, String newImageUrl, String newContractAddress) {
            type = newType;
            imageUrl = newImageUrl;
            contractAddress = newContractAddress;
        }
    }
}